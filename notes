Notes for ft_ls project :

Option : -l -R, -a, -r, -t
	-l : listing format : right, group, user, number (?inode?), mounth, day, hour:min, name
	-R : recursive
	-a : all, do not ignore hidden file
	-r : reverse order
	-t : sort by modification time, new first

Allowed function :
	- write :
		includes :
			#include <unistd.h>
	- opendir :
		includes :
			#include <sys/types.h>
			#include <dirent.h>
		prototype :
			DIR *opendir(const char *name);
		description :
			open directory, return pointer
		return :
			see errno
	- readdir :
		includes :
			#include <dirent.h>
		prototype :
			struct dirent *readdir(DIR *dirp);
		description :
	        	struct dirent
				{
					ino_t          d_ino;       /* inode number */
            		off_t          d_off;       /* not an offset; see NOTES */
               		unsigned short d_reclen;    /* length of this record */
               		unsigned char  d_type;      /* type of file; not supported
                                              by all filesystem types */
               		char           d_name[256]; /* filename */
	           };
	- closedir :
		includes :
			#include <sys/types.h>
			#include <dirent.h>
		prototype :
			int	closedir(DIR *dirp);
		description :
			close dir
	- stat :
		includes :
			#include <sys/types.h>
			#include <sys/stat.h>
			#include <dirent.h>
		prototype :
			int stat(const char *pathname, struct stat *buf);
		description :
			 struct stat {
               dev_t     st_dev;         /* ID of device containing file */
               ino_t     st_ino;         /* inode number */
               mode_t    st_mode;        /* protection */
               nlink_t   st_nlink;       /* number of hard links */
               uid_t     st_uid;         /* user ID of owner */
               gid_t     st_gid;         /* group ID of owner */
               dev_t     st_rdev;        /* device ID (if special file) */
               off_t     st_size;        /* total size, in bytes */
               blksize_t st_blksize;     /* blocksize for filesystem I/O */
               blkcnt_t  st_blocks;      /* number of 512B blocks allocated */

               /* Since Linux 2.6, the kernel supports nanosecond
                  precision for the following timestamp fields.
                  For the details before Linux 2.6, see NOTES. */

               struct timespec st_atim;  /* time of last access */
               struct timespec st_mtim;  /* time of last modification */
               struct timespec st_ctim;  /* time of last status change */

           #define st_atime st_atim.tv_sec      /* Backward compatibility */
           #define st_mtime st_mtim.tv_sec
           #define st_ctime st_ctim.tv_sec
           };
	- lstat :
		includes :
			#include <sys/types.h>
			#include <sys/stat.h>
			#include <dirent.h>
		prototype :
			int lstat(const char *pathname, struct stat *buf);
		description :
			stat, for link.
	- ...
